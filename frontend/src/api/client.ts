import axios, { AxiosError } from 'axios';

// –ü–æ–ª—É—á–∞–µ–º URL API –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
// –í–∞–∂–Ω–æ: –Ω–∞ Vercel —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è VITE_API_URL
const API_URL = import.meta.env.VITE_API_URL || 'http://localhost:8000';

console.log('üîó API URL:', API_URL);

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios —Å –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
export const apiClient = axios.create({
  baseURL: `${API_URL}/api`,
  headers: {
    'Content-Type': 'application/json',
  },
  timeout: 30000, // –£–≤–µ–ª–∏—á–∏–ª–∏ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
  withCredentials: false, // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—É–∫–∏ –¥–ª—è CORS
});

// –ò–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ (–≤ dev —Ä–µ–∂–∏–º–µ)
apiClient.interceptors.request.use(
  (config) => {
    if (import.meta.env.DEV) {
      console.log(`üîµ API Request: ${config.method?.toUpperCase()} ${config.url}`);
    }
    return config;
  },
  (error) => {
    console.error('‚ùå Request Error:', error);
    return Promise.reject(error);
  }
);

// –ò–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
apiClient.interceptors.response.use(
  (response) => {
    if (import.meta.env.DEV) {
      console.log(`üü¢ API Response: ${response.config.url}`, response.data);
    }
    return response;
  },
  (error: AxiosError) => {
    console.error('‚ùå API Error:', error.message);
    
    // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    if (error.response) {
      // –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏
      console.error('Response Error:', error.response.status, error.response.data);
    } else if (error.request) {
      // –ó–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –±—ã–ª–æ
      console.error('No Response:', error.request);
    } else {
      // –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞
      console.error('Request Setup Error:', error.message);
    }
    
    return Promise.reject(error);
  }
);

export default apiClient;

